package pages;

import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.util.List;
import static org.openqa.selenium.By.ByTagName.*;

public class LandingPage {
	
	By imdbLogo = By.xpath("//a[@id='home_img_holder']");
	By imdbPageTitle = By.xpath("//h1[contains(text(),'IMDb Top 250 Movies')]");
	By imdbSubTitle = By.xpath("//div[contains(text(),'IMDb Top 250 as rated by regular IMDb voters.')]");
	By imdbCharts = By.xpath("//h3[contains(text(),'IMDb Charts')]");
	By signInButton = By.xpath("//div[contains(text(),'Sign In')]");
	By rankAndTitlePlaceHolder = By.xpath("//th[contains(text(),'Rank & Title')]");
	By imdbRatingPlaceHolder = By.xpath("//th[contains(text(),'IMDb Rating')]");
	By yourRatingPlaceHolder = By.xpath("//th[contains(text(),'Your Rating')]");


	WebDriver driver;
	WebDriverWait wait;
	JavascriptExecutor js;

	public LandingPage(WebDriver driver) {
		this.driver=driver;
		wait = new WebDriverWait(driver, 5);
		js = (JavascriptExecutor) driver;
	}


	public void getTableOfMovies(){
		int columnsCount = 0;

		WebElement moviesTable = driver.findElement(By.xpath("//tbody[@class='lister-list']"));
		List < WebElement > rowsTable = moviesTable.findElements(tagName("tr"));
		int rowsCount = rowsTable.size();
		System.out.println("Number of Rows " +"are " + rowsCount);

		//Loop will execute till the last row of table.
		for (int row = 0; row < rowsCount; row++) {
			//To locate columns(cells) of that specific row.
			List < WebElement > ColumnsRow = rowsTable.get(row).findElements(By.tagName("td"));
			//To calculate no of columns (cells). In that specific row.
			columnsCount = ColumnsRow.size();
			System.out.println("");
			System.out.println("Number of cells In Row " + row + " are " + columnsCount);
			//Loop will execute till the last cell of that specific row.
			for (int column = 0; column < columnsCount; column++) {
				// To retrieve text from that specific cell.
				String celText = ColumnsRow.get(column).getText();
				String celContent = ColumnsRow.get(column).getAttribute("class");
				//System.out.println("Cell Value of row number " + row + " and column number " + column + " Is " + celText);
				System.out.println("Cell Content of row number " + row + " and column number " + column + " Has " + celContent + " : "+celText);
			}
			System.out.println("-------------------------------------------------- ");
			
		}
		System.out.println("Number of Columns " +"are " + columnsCount);
	}

	String titleOfMovie = "";

	public String getTitleOfMovie(int rank){
		WebElement moviesTable = driver.findElement(By.xpath("//tbody[@class='lister-list']"));
		List < WebElement > rowsTable = moviesTable.findElements(tagName("tr"));
		List < WebElement > ColumnsRow = rowsTable.get(rank).findElements(By.tagName("td"));

		titleOfMovie=ColumnsRow.get(1).getText().replaceFirst(rank+".","").trim();

			String separator = ".";
			int sepPos = titleOfMovie.indexOf(separator);
			titleOfMovie = titleOfMovie.substring(sepPos +separator.length());

			if (rank==18){
				titleOfMovie = titleOfMovie.replaceAll("[0-6 8-9\\.+\\/()]","").trim();}
			else if (rank==28){
				titleOfMovie = titleOfMovie.replaceAll("[0-1 3-9\\.+\\/()]","").trim();
				titleOfMovie = titleOfMovie.replaceAll("(?!^)([A-Z 2])", " $1");}
			else if (rank==83){
				titleOfMovie = titleOfMovie.replaceAll("[0-2 4-9\\.+\\/()]","").trim();
				titleOfMovie = titleOfMovie.replaceAll("(?!^)([A-Z 3])", " $1");}
			else if (rank==86){
				titleOfMovie = titleOfMovie.replaceAll("[0-2 4-9\\.+\\/()]","").trim();
				titleOfMovie = titleOfMovie.replaceAll("(?!^)([A-Z])", " $1");}
			else if (rank==88){
				titleOfMovie = titleOfMovie.replaceAll("[3-9\\.+\\/()]","").trim();
				titleOfMovie = titleOfMovie.substring(0, titleOfMovie.length() - 2);  }
			else if (rank==122){
				titleOfMovie = titleOfMovie.replaceAll("[2-6 8\\.+\\/()]","").trim();
				titleOfMovie = titleOfMovie.substring(0, titleOfMovie.length() - 3);}
			else if (rank==150){
				titleOfMovie = titleOfMovie.replaceAll("[2-6 8+\\/()]","").trim();
				titleOfMovie = titleOfMovie.replaceAll("(?!^)([A-Z 1])", " $1");
				titleOfMovie = titleOfMovie.substring(0, titleOfMovie.length() - 2);}
			else if (rank==66){
				titleOfMovie = titleOfMovie.replaceAll("[0-9+\\/()]","").trim();}
			else if (rank==111){
				titleOfMovie = titleOfMovie.replaceAll("[0-9+\\/()]","").trim();}
			else if (rank==181){
				titleOfMovie = titleOfMovie.replaceAll("[0 3-9+\\/()]","").trim();
				titleOfMovie = titleOfMovie.replaceAll("(?!^)([A-Z])", " $1");
				titleOfMovie = titleOfMovie.substring(0, titleOfMovie.length() - 2);
				titleOfMovie = titleOfMovie.replaceAll("........(?=.)", "$0 ");
				}
			else if(rank==189){
				titleOfMovie = titleOfMovie.replaceAll("[0-9\\+\\/()]","").trim();}
			else if(rank==236){
				titleOfMovie = titleOfMovie.replaceAll("[1-3 5-9\\+\\/()]","").trim();
				titleOfMovie = titleOfMovie.replaceAll("(?!^)([B 4])", " $1");}
			else{
				titleOfMovie = titleOfMovie.replaceAll("[0-9\\.+\\/()]","").trim();}

		System.out.println("Title of Movie --> "+titleOfMovie);
			return titleOfMovie;
	}

	public WebElement getPosterOfMovie(int rank){
		int num = rank+1;
		WebElement moviesTable = driver.findElement(By.xpath("//tbody[@class='lister-list']"));
		List < WebElement > rowsTable = moviesTable.findElements(tagName("tr"));
		String locatorForPoster = String.format("//tbody[@class='lister-list']/tr[%s]/td[1]/a/img",num);
		return driver.findElement(By.xpath(locatorForPoster));
	}

	public String getRatingOfMovie(int rank){
		js.executeScript("window.history.go(-1)");
		WebElement moviesTable = driver.findElement(By.xpath("//tbody[@class='lister-list']"));
		List < WebElement > rowsTable = moviesTable.findElements(tagName("tr"));
		List < WebElement > ColumnsRow = rowsTable.get(rank).findElements(By.tagName("td"));
		String celText = ColumnsRow.get(2).getText();
		System.out.println("Rating of Movie ---> "+celText);
		return celText;
	}

	public WebElement getYourRatingOfMovie(int rank){
		//js.executeScript("window.history.go(-1)");
		int num = rank+1;
		WebElement moviesTable = driver.findElement(By.xpath("//tbody[@class='lister-list']"));
		List < WebElement > rowsTable = moviesTable.findElements(tagName("tr"));
		String locatorForYourRating = String.format("//tbody[@class='lister-list']/tr[%s]/td[4]/div[contains(@class,'seen-widget')]",num);
		return driver.findElement(By.xpath(locatorForYourRating));
	}

	public WebElement getWatchListRibbon(int rank){
		//js.executeScript("window.history.go(-1)");
		int num = rank+1;
		WebElement moviesTable = driver.findElement(By.xpath("//tbody[@class='lister-list']"));
		List < WebElement > rowsTable = moviesTable.findElements(tagName("tr"));
		String locatorForYourRibbon = String.format("//tbody[@class='lister-list']/tr[%s]/td[5]/div[contains(@class,'wlb_ribbon')]",num);
		return driver.findElement(By.xpath(locatorForYourRibbon));
	}


	public boolean verifyLogo(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(imdbLogo)).isDisplayed();
	}

	public boolean verifyTitle(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(imdbPageTitle)).isDisplayed();
	}

	public boolean verifySubTitle(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(imdbSubTitle)).isDisplayed();
	}

	public boolean verifyCharts(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(imdbCharts)).isDisplayed();
	}

	public boolean verifySignInButton(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(signInButton)).isDisplayed();
	}

	public boolean verifyRankAndTitlePlaceHolder(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(rankAndTitlePlaceHolder)).isDisplayed();
	}

	public boolean verifyImdbRatingPlaceHolder(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(imdbRatingPlaceHolder)).isDisplayed();
	}

	public boolean verifyYourRatingPlaceHolder(){
		return wait.until(ExpectedConditions.visibilityOfElementLocated(yourRatingPlaceHolder)).isDisplayed();
	}

	public boolean verifyPageTitle(){
		return driver.getTitle().trim().contains("Top 250 Movies - IMDb");
	}


	public boolean isPosterLinkClickable(int rank){
		getPosterOfMovie(rank).click();
		String element = String.format("//h1[contains(text(),\"%s\")]",titleOfMovie);
		return wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(element))).isDisplayed();
	}

	public boolean isTitleLinkClickable(){
		String element = String.format("//a[contains(text(),\"%s\")]",titleOfMovie);
		String title = String.format("//h1[contains(text(),\"%s\")]",titleOfMovie);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(element))).click();
		return wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(title))).isDisplayed();
	}

}
